import java.io.*;
class mergesort
{
public static void main(String args[])throws IOException
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
int n,i;
int arr[];
System.out.println("Enter size of array");
n=Integer.parseInt(br.readLine());
arr=new int[n];
System.out.println("Enter elements");
for(i=0;i<n;i++)
arr[i]=Integer.parseInt(br.readLine());
msort(arr,0,n-1);
System.out.println("-------SORTED ARRAY-------");
for(i=0;i<n;i++)
System.out.println(arr[i]);
}
void msort(int arr[],int l,int r)
{
int mid=(l+r)/2;
if(l<r)
{
msort(arr,l,mid);
msort(arr,mid+1,r);
merge(arr,l,mid,r);
}
}
void merge(int arr[],int l,int mid,int r)
{
int n1,n2,i,j;
n1=mid-l+1;
n2=r-mid;
int L[]=new int[n1];
int R[]=new int[n2];
for(i=l;i<=mid;i++)
L[i-l]=arr[i];
for(i=mid+1;i<=r;i++)
R[i-mid-1]=arr[i];
i=0;
j=0;
k=0;
while(i<n1 && j<n2)
{
if(L[i]<R[j])
{
arr[k++]=L[i++];
}
else
{
arr[k++]=R[j++];
}
}
while(i<n1)
arr[k++]=L[i++];
while(j<n2)
arr[k++]=R[j++];
}


